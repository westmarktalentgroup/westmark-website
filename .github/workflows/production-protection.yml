name: Westmark Production Protection

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  # BLOCK ALL DIRECT PUSHES TO MAIN - This is the core protection
  block-direct-pushes:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
    - name: 🚨 BLOCK DIRECT PUSH TO MAIN
      run: |
        echo "🚨 CRITICAL: DIRECT PUSH TO MAIN BRANCH DETECTED"
        echo "================================================"
        echo "❌ This repository requires pull requests for all changes"
        echo "❌ Direct pushes to main are BLOCKED for security"
        echo ""
        echo "✅ REQUIRED WORKFLOW:"
        echo "   1. Work in development/ directory"
        echo "   2. Create a pull request"
        echo "   3. Pass all status checks"
        echo "   4. Merge through GitHub interface"
        echo ""
        echo "🛡️ This protection cannot be bypassed locally"
        echo "🔒 Server-side enforcement prevents AI agent circumvention"
        echo ""
        exit 1

  # VALIDATE PULL REQUESTS - Only allow proper workflow
  validate-pull-request:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Validate Pull Request
      run: |
        echo "✅ Pull Request Validation"
        echo "=========================="
        
        # Check if development directory exists
        if [[ ! -d "development" ]]; then
          echo "🚨 CRITICAL: Development directory missing"
          echo "❌ Pull request blocked"
          exit 1
        fi
        
        # Check if required files exist
        REQUIRED_FILES=(
          "development/index.html"
          "development/assets/css/optimized.css"
          "development/assets/js/consolidated.js"
        )
        
        for file in "${REQUIRED_FILES[@]}"; do
          if [[ ! -f "$file" ]]; then
            echo "🚨 CRITICAL: Required file missing: $file"
            echo "❌ Pull request blocked"
            exit 1
          fi
        done
        
        echo "✅ All required files present"
        echo "✅ Pull request validation passed"
        
    - name: Check for Direct Production Modifications
      run: |
        echo "🔍 Checking for direct production modifications..."
        
        # Check if any production files were modified directly
        PRODUCTION_FILES=(
          "index.html"
          "clients.html"
          "contact-us.html"
          "assets/css/optimized.css"
          "assets/js/consolidated.js"
        )
        
        for file in "${PRODUCTION_FILES[@]}"; do
          if git diff --name-only HEAD~1 | grep -q "^$file$"; then
            echo "🚨 CRITICAL: Direct production file modification detected: $file"
            echo "❌ All changes must be made in development/ directory"
            echo "❌ Pull request blocked"
            exit 1
          fi
        done
        
        echo "✅ No direct production modifications detected"
        
    - name: Validate Documentation
      run: |
        echo "📋 Validating documentation..."
        
        # Check if documentation files exist
        DOC_FILES=(
          "docs/AI_CIRCUMVENTION_PROTECTION.md"
          "docs/COMPONENT_LIBRARY.md"
          "docs/CSS_STANDARDS.md"
          "docs/TECHNICAL_ARCHITECTURE.md"
        )
        
        for file in "${DOC_FILES[@]}"; do
          if [[ ! -f "$file" ]]; then
            echo "🚨 CRITICAL: Required documentation missing: $file"
            echo "❌ Pull request blocked"
            exit 1
          fi
        done
        
        echo "✅ All required documentation present"
        
    - name: Security Check
      run: |
        echo "🔐 Running security checks..."
        
        # Check for suspicious patterns in commit messages
        if git log -1 --pretty=%B | grep -iE "(bypass|circumvent|force|override|skip|disable)" >/dev/null; then
          echo "🚨 CRITICAL: Suspicious commit message detected"
          echo "❌ Pull request blocked for security"
          exit 1
        fi
        
        echo "✅ Security checks passed"
        
    - name: Deploy to GitHub Pages (if PR is merged)
      if: github.event.action == 'closed' && github.event.pull_request.merged == true
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./
