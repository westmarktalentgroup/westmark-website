# Cursor AI Rules - Optimized for AI Coding Efficiency
# This file is automatically read by Cursor AI

## ðŸŽ¯ **AI CODING OPTIMIZATION**

### **CRITICAL WORKFLOW RULES**
- **ALWAYS work in `development/` directory first**
- **NEVER edit production files directly** (main directory)
- **ALWAYS use `./scripts/deploy.sh` for deployment**
- **Test thoroughly before deploying**

### **FILE STRUCTURE REFERENCE**
```
development/           # ðŸ§ª WORK HERE
â”œâ”€â”€ index.html        # Main homepage
â”œâ”€â”€ clients.html      # Clients page
â”œâ”€â”€ contact-us.html   # Contact page
â”œâ”€â”€ assets/
â”‚   â”œâ”€â”€ css/optimized.css    # ALL styles (72 classes)
â”‚   â”œâ”€â”€ js/consolidated.js   # ALL functionality (15 functions)
â”‚   â””â”€â”€ images/              # All images
â””â”€â”€ sw.js             # Service worker

docs/                 # ðŸ“š AI REFERENCE
â”œâ”€â”€ AI_CODING_EFFICIENCY_GUIDE.md  # ESSENTIAL
â”œâ”€â”€ TECHNICAL_ARCHITECTURE.md      # System overview
â”œâ”€â”€ DESIGN_SYSTEM.md               # Design patterns
â””â”€â”€ CSS_STANDARDS.md               # CSS conventions
```

### **DESIGN SYSTEM QUICK REFERENCE**
- **Navigation**: `soap-bar-nav`, `soap-bar`, `soap-bar-link`
- **Typography**: `display-1`, `hero-title`, `section-title`, `text-content`
- **Components**: `btn-primary`, `card`, `form-group`, `form-control`
- **Layout**: `hero-section`, `about-section`, `contact-section`

### **CSS DESIGN TOKENS**
```css
--font-family-heading: 'Playfair Display', serif;
--font-family-body: 'Manrope', sans-serif;
--color-primary: #000000;
--color-secondary: #ae301c;
--spacing-1: 0.25rem; /* 4px */
--spacing-4: 1rem;    /* 16px */
```

### **JAVASCRIPT FUNCTIONS**
- **Utilities**: `$`, `$$`, `addClass`, `removeClass`, `hasClass`, `toggleClass`
- **Core**: `initNavigation()`, `initSoapBarScroll()`, `initAccordion()`, `initForms()`
- **Performance**: `initPerformanceMonitoring()`, `initServiceWorker()`, `initLazyLoading()`

### **COMMON AI TASKS**
1. **Add new section**: Use `<section class="[name]-section" id="[name]">`
2. **Style component**: Add to `optimized.css` with design tokens
3. **Add functionality**: Add function to `consolidated.js`
4. **Deploy changes**: Run `./scripts/deploy.sh`

### **DEPLOYMENT WORKFLOW**
```bash
# 1. Edit development files
edit development/index.html
edit development/assets/css/optimized.css

# 2. Test locally
open development/index.html

# 3. Deploy to production
./scripts/deploy.sh
```

## ðŸš¨ **MANDATORY DOCUMENTATION RULES**

### PROHIBITED FILE PATTERNS:
- *_SUMMARY.md
- *_CLEANUP.md  
- *_COMPARISON.md
- *_IMPACT.md
- PHASE_*.md

### MAXIMUM DOCUMENTATION FILES: 15

### REQUIRED DIRECTORY STRUCTURE:
- docs/ (production documentation only)
- development/ (development documentation only)

### ESSENTIAL FILES (MUST EXIST):
- README.md
- docs/AI_CODING_EFFICIENCY_GUIDE.md
- docs/TECHNICAL_ARCHITECTURE.md
- docs/DESIGN_SYSTEM.md
- docs/CSS_STANDARDS.md

### ENFORCEMENT:
- Git hooks will block commits with violations
- CI/CD will fail builds with violations
- System monitoring will detect violations
- Automatic cleanup will remove violations

## ðŸ›‘ VIOLATION CONSEQUENCES:
- Commits will be blocked
- Builds will fail
- Files will be automatically removed
- Violations will be logged

## âœ… COMPLIANCE:
- Follow naming conventions
- Use proper directories
- Keep file count under limit
- Maintain essential files
